text,summary
" PG&E Now there are rules to Lewis structures, and here is the complete rule. In your handout, this wouldn't fit on one page. It's on two pages. And these rules, if you do work these problems, you will remember these rules, and they become pretty easy. But it's important to work Lewis structure problems so that the rules become really familiar to you. And it takes time to work Lewis structure problems, so don't wait to the last minute to start this problem set. There's a lot of Lewis structure problems on it, which means it's not difficult, but it's going to take some time. All right. So let's briefly go over these rules. First what you want to do is draw in the skeleton structure. Just put the atoms down. Hydrogen and fluorine are always going to be terminal atoms. Don't put them in the middle of a molecule. That gets chemistry professors really upset to see hydrogen in the middle with lots of bonds to things, so don't do it. And typically the element with the lowest ionization energy goes in the middle, and there are some exceptions and we'll see some of those exceptions. But that should be your first guess. You want to count the number of valence electrons. If there's a negative charge, you need to count that in or if there's a positive charge you need to subtract that from the total. Then you want to figure out the total number of electrons needed, so everyone has their full valence shell. You need to subtract these two to get the number of bonding electrons. And here are some of the things that it's really easy to make math mistakes here, so if your structure makes zero sense at the end, go back and check your math. Assign to bonding electrons to each bond. If any remain, you want to think about whether you have double or triple bonds. And there's only certain kinds of atoms that can have double and triple bonds. So be careful where you're putting your double and triple bonds. If any valence electrons remain, those are lone pairs. And then lastly, you want to figure out the formal charge on all of the atoms in your structure to make sure that this is a valid structure, and we're going to talk about formal charge. So first, let's just try an example.

Write a summary of the prior text that highlights its key points:","To draw Lewis structures, place the atoms in a skeleton structure, count the number of valence electrons while adding negative charges or subtracting if there are positive charges. Then calculate the electrons needed to fulfill the valance shell of each atom. Then, use bonding electrons to form bonds, remaining bonds may be due to a double or triple bond. Any remaining electrons after that are lone pairs. Lastly, calculate the formal charge of all the atoms to verify if the structure is valid. Hydrogen and fluorine are always terminal atoms and the element with the lowest ionization energy typically goes in the middle. Double and triple bonds are only allowed for certain atoms."
" PG&E So there is more than one agile system. The one that we use, and that the people who work in our labs in Europe use, is called Scrum. Is anybody familiar with Scrum? Yay, there's a few people. Anybody used it at internships and things like that? OK. All right, so you guys can help your teams out a little bit hopefully. So Scrum has three buzzwords, and I may as well go ahead and call them buzzwords, because that's really what they are, that are supposed to define it and let you understand what it's about. They are transparency, inspection, and adaptability. You can think of them as Scrum's vision statement, much shorter than a document. Essentially, if you are doing Scrum right, all of your decisions and processes are transparent. Everyone on the team who needs to be involved in a decision is, and anyone on the team who wants to understand why something was done can. No one on the team should be able to say at any point, ""Well, no one told me about that,"" because it's both the team's responsibility to share information, and each team member's responsibility to stay informed. Everything done by the team is inspected at some point - decisions, processes, team actions, deliverables, code. The team thinks proactively about what they're doing and how they're doing it. And if the team discovers a problem, for example, the build keeps being broken every night, the team doesn't just say, ""Oh, we'll work around it."" Instead, it takes responsibility for figuring out how and why, and fixing not just the broken build, but the processes that led to the broken build. And finally, which feeds back into the other two, the team is willing to adapt any processes and decisions to the reality they're actually dealing with when they find a structural problem. For example, how do art assets get in the game? Well, right now we're having the programmers hand load them in, and we're losing six hours of programmer time every week. Instead, they sit down and say, ""Well, how do we fix this? Do we take 12 hours next sprint to code up a tool that allows the artist to put it in? And then we'll save all that time going forward. Do we teach the artists how to put their art in directly?"" I've had this discussion on a team in which we were losing an awful lot of time to programmers putting art in the game. And the programmers were convinced it would be faster just to keep putting it in because it would take too long to teach the artists how to do it, despite the fact that it was eating up eight or 12 hours of programmer time every week. I still think they were wrong anyway. Note that I keep saying ""team"" and ""team members."" In Scrum, the responsibility for project management doesn't sit with a producer or design lead or the programming lead. It's the team's responsibility, guided by the team members, to manage their own project. That doesn't mean that a Scrum team gets to do whatever they want. They still have constraints, requirements, expectations, project handouts handed down to them from managers, clients, instructors, and other people. But in exchange for taking responsibility for the project management, Scrum teams do get to explain to the producers, managers, executives, and outside forces just how much they think they can achieve in a given time. So you can go ahead and ask a Scrum team for the sky, the Earth, the stars, and the moon. And an experienced and empowered Scrum team will explain that, ""Okay, in that time and on that budget, we can get you a terrarium with a fancy night light.

Write a summary of the prior text that highlights its key points:","Scrum is an agile project management system that emphasizes transparency, inspection, and adaptability. The responsibility for project management sits with the team, who manage their own processes, decisions, and deliverables. The team is proactive in identifying and fixing problems, and willing to adapt processes to address them. Scrum teams have constraints and expectations, but can negotiate achievable goals with managers and outside forces."
" PG&E The Mahalanobis Distance algorithm is a measure of the distance between two points in a multi-dimensional space. It is a statistical measure that takes into account the correlation between variables and scales the distance based on the covariance matrix of the data. This lecture will provide a detailed explanation of how the Mahalanobis Distance algorithm works, including its mathematical foundation and practical applications. First, let us consider the concept of Euclidean distance, which is the simplest measure of distance between two points in a multi-dimensional space. Euclidean distance is calculated as the square root of the sum of squared differences between the corresponding elements of the two points. This measure assumes that all variables are independent and equally important, which is not always the case in real-world data. The Mahalanobis Distance algorithm takes into account the correlation between variables by using the covariance matrix of the data. The covariance matrix represents the degree of correlation between pairs of variables and is used to transform the data into a new coordinate system where the axes are the principal components of the data. The Mahalanobis Distance between two points is then calculated as the Euclidean distance between the transformed points. The Mahalanobis distance between two points x and y is equal to the square root of the transpose of the difference between x and y, multiplied by the inverse of the covariance matrix Sigma, multiplied by the difference between x and y. In this formula, x minus y represents the difference between the two points, which is then scaled by the inverse of the covariance matrix to take into account the correlation between variables. The resulting distance metric is a measure of the number of standard deviations between the two points in the new coordinate system. The Mahalanobis Distance algorithm has several practical applications, particularly in data analysis and machine learning. For example, it can be used for anomaly detection by identifying points that are significantly different from the rest of the data based on their distance from the mean. It can also be used for clustering and classification problems, where it is important to take into account the correlation between variables.

Write a summary of the prior text that highlights its key points:","The Mahalanobis Distance algorithm is a statistical measure that calculates the distance between two points in a multi-dimensional space, taking into account the correlation between variables by using the covariance matrix of the data. The resulting distance metric is a measure of the number of standard deviations between the two points in a new coordinate system, and it has practical applications in data analysis and machine learning, such as anomaly detection, clustering, and classification problems."
